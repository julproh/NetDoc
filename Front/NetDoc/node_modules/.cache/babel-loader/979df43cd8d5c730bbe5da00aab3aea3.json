{"ast":null,"code":"import { SHOW_MODAL, HIDE_MODAL, GET_INFO_SUCCESS, GET_INFO_FAILURE, GET_INFO_REQUESTED } from '../actions/header-actions';\nconst initialState = {\n  error: \"\",\n  modalIsVisible: false,\n  infos: [],\n  infoLoading: false\n};\n\nconst headerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_MODAL:\n      return { ...state,\n        modalIsVisible: true\n      };\n\n    case HIDE_MODAL:\n      {\n        return { ...state,\n          modalIsVisible: false\n        };\n      }\n\n    case GET_INFO_SUCCESS:\n      {\n        return { ...state,\n          infos: action.payload,\n          infoLoading: false\n        };\n      }\n\n    case GET_INFO_REQUESTED:\n      {\n        return { ...state,\n          infoLoading: true\n        };\n      }\n\n    case GET_INFO_FAILURE:\n      {\n        return { ...state,\n          error: action.payload,\n          infoLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default headerReducer;","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/header/reducer/header-reducer.ts"],"names":["SHOW_MODAL","HIDE_MODAL","GET_INFO_SUCCESS","GET_INFO_FAILURE","GET_INFO_REQUESTED","initialState","error","modalIsVisible","infos","infoLoading","headerReducer","state","action","type","payload"],"mappings":"AAAA,SACIA,UADJ,EAEIC,UAFJ,EAGIC,gBAHJ,EAIIC,gBAJJ,EAKIC,kBALJ,QAOO,2BAPP;AAgBA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,KAAK,EAAE,EADuB;AAE9BC,EAAAA,cAAc,EAAE,KAFc;AAG9BC,EAAAA,KAAK,EAAE,EAHuB;AAI9BC,EAAAA,WAAW,EAAE;AAJiB,CAAlC;;AAOA,MAAMC,aAAa,GAAG,YAGjB;AAAA,MAFDC,KAEC,uEAFON,YAEP;AAAA,MADDO,MACC;;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,UAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,cAAc,EAAE;AAFb,OAAP;;AAIJ,SAAKN,UAAL;AAAiB;AACb,eAAO,EACH,GAAGU,KADA;AAEHJ,UAAAA,cAAc,EAAE;AAFb,SAAP;AAIH;;AACD,SAAKL,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGS,KADA;AAEHH,UAAAA,KAAK,EAAEI,MAAM,CAACE,OAFX;AAGHL,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKH;;AACD,SAAKL,kBAAL;AAAyB;AACrB,eAAO,EACH,GAAGO,KADA;AAEHF,UAAAA,WAAW,EAAE;AAFV,SAAP;AAIH;;AACD,SAAKN,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGQ,KADA;AAEHL,UAAAA,KAAK,EAAEM,MAAM,CAACE,OAFX;AAGHL,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKH;;AACD;AACI,aAAOE,KAAP;AAjCR;AAmCH,CAvCD;;AAyCA,eAAeD,aAAf","sourcesContent":["import {\r\n    SHOW_MODAL,\r\n    HIDE_MODAL,\r\n    GET_INFO_SUCCESS,\r\n    GET_INFO_FAILURE,\r\n    GET_INFO_REQUESTED,\r\n    HeaderActionTypes\r\n} from '../actions/header-actions';\r\n\r\nexport interface HeaderState {\r\n    modalIsVisible: boolean;\r\n    infoLoading: boolean;\r\n    infos: any;\r\n    error: string;\r\n}\r\n\r\nconst initialState: HeaderState = {\r\n    error: \"\",\r\n    modalIsVisible: false,\r\n    infos: [],\r\n    infoLoading: false\r\n};\r\n\r\nconst headerReducer = (\r\n    state = initialState,\r\n    action: HeaderActionTypes\r\n) => {\r\n    switch (action.type) {\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modalIsVisible: true\r\n            };\r\n        case HIDE_MODAL: {\r\n            return {\r\n                ...state,\r\n                modalIsVisible: false\r\n            };\r\n        }\r\n        case GET_INFO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                infos: action.payload,\r\n                infoLoading: false\r\n            };\r\n        }\r\n        case GET_INFO_REQUESTED: {\r\n            return {\r\n                ...state,\r\n                infoLoading: true\r\n            };\r\n        }\r\n        case GET_INFO_FAILURE: {\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                infoLoading: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default headerReducer;"]},"metadata":{},"sourceType":"module"}