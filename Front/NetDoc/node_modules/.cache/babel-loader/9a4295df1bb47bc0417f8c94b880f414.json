{"ast":null,"code":"const GET_USER_INFO_BY_ID = 'GET_USER_INFO_BY_ID';\nconst GET_USER_INFO_BY_ID_REQUESTED = 'GET_USER_INFO_BY_ID_REQUESTED';\nconst GET_USER_INFO_BY_ID_SUCCESS = 'GET_USER_INFO_BY_ID_SUCCESS';\nconst GET_USER_INFO_BY_ID_FAILURE = 'GET_USER_INFO_BY_ID_FAILURE';\n\nconst getUserInfoById = service => () => ({\n  type: GET_USER_INFO_BY_ID,\n  service\n});\n\nconst getUserInfoByIdRequested = () => ({\n  type: GET_USER_INFO_BY_ID_REQUESTED\n});\n\nconst getUserInfoByIdSuccess = data => ({\n  type: GET_USER_INFO_BY_ID_SUCCESS,\n  payload: data\n});\n\nconst getUserInfoByIdFailure = error => ({\n  type: GET_USER_INFO_BY_ID_FAILURE,\n  payload: error\n});\n\nconst PUT_USER_INFO_BY_ID = 'PUT_USER_INFO_BY_ID';\nconst PUT_USER_INFO_BY_ID_REQUESTED = 'PUT_USER_INFO_BY_ID_REQUESTED';\nconst PUT_USER_INFO_BY_ID_SUCCESS = 'PUT_USER_INFO_BY_ID_SUCCESS';\nconst PUT_USER_INFO_BY_ID_FAILURE = 'PUT_USER_INFO_BY_ID_FAILURE';\n\nconst putUserInfoById = service => userInfo => ({\n  type: PUT_USER_INFO_BY_ID,\n  service,\n  payload: userInfo\n});\n\nconst putUserInfoByIdRequested = () => ({\n  type: PUT_USER_INFO_BY_ID_REQUESTED\n});\n\nconst putUserInfoByIdSuccess = () => ({\n  type: PUT_USER_INFO_BY_ID_SUCCESS\n});\n\nconst putUserInfoByIdFailure = error => ({\n  type: PUT_USER_INFO_BY_ID_FAILURE,\n  payload: error\n});\n\nexport { GET_USER_INFO_BY_ID, GET_USER_INFO_BY_ID_REQUESTED, GET_USER_INFO_BY_ID_SUCCESS, GET_USER_INFO_BY_ID_FAILURE, getUserInfoById, getUserInfoByIdFailure, getUserInfoByIdRequested, getUserInfoByIdSuccess, PUT_USER_INFO_BY_ID, PUT_USER_INFO_BY_ID_REQUESTED, PUT_USER_INFO_BY_ID_FAILURE, PUT_USER_INFO_BY_ID_SUCCESS, putUserInfoById, putUserInfoByIdRequested, putUserInfoByIdFailure, putUserInfoByIdSuccess };","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/profile/actions/profile-actions.ts"],"names":["GET_USER_INFO_BY_ID","GET_USER_INFO_BY_ID_REQUESTED","GET_USER_INFO_BY_ID_SUCCESS","GET_USER_INFO_BY_ID_FAILURE","getUserInfoById","service","type","getUserInfoByIdRequested","getUserInfoByIdSuccess","data","payload","getUserInfoByIdFailure","error","PUT_USER_INFO_BY_ID","PUT_USER_INFO_BY_ID_REQUESTED","PUT_USER_INFO_BY_ID_SUCCESS","PUT_USER_INFO_BY_ID_FAILURE","putUserInfoById","userInfo","putUserInfoByIdRequested","putUserInfoByIdSuccess","putUserInfoByIdFailure"],"mappings":"AAIA,MAAMA,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,6BAA6B,GAAG,+BAAtC;AACA,MAAMC,2BAA2B,GAAG,6BAApC;AACA,MAAMC,2BAA2B,GAAG,6BAApC;;AA8BA,MAAOC,eAAe,GAAIC,OAAD,IAA0B,OAA8B;AAC7EC,EAAAA,IAAI,EAAEN,mBADuE;AAE7EK,EAAAA;AAF6E,CAA9B,CAAnD;;AAKA,MAAME,wBAAwB,GAAG,OAA2B;AACxDD,EAAAA,IAAI,EAAEL;AADkD,CAA3B,CAAjC;;AAIA,MAAMO,sBAAsB,GAAIC,IAAD,KAAoC;AAC/DH,EAAAA,IAAI,EAAEJ,2BADyD;AAE/DQ,EAAAA,OAAO,EAAED;AAFsD,CAApC,CAA/B;;AAKA,MAAME,sBAAsB,GAAIC,KAAD,KAAwC;AACnEN,EAAAA,IAAI,EAAEH,2BAD6D;AAEnEO,EAAAA,OAAO,EAAEE;AAF0D,CAAxC,CAA/B;;AAKA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,6BAA6B,GAAG,+BAAtC;AACA,MAAMC,2BAA2B,GAAG,6BAApC;AACA,MAAMC,2BAA2B,GAAG,6BAApC;;AAqBA,MAAOC,eAAe,GAAIZ,OAAD,IAA2Ba,QAAD,KAAgD;AAC/FZ,EAAAA,IAAI,EAAEO,mBADyF;AAE/FR,EAAAA,OAF+F;AAG/FK,EAAAA,OAAO,EAAEQ;AAHsF,CAAhD,CAAnD;;AAMA,MAAMC,wBAAwB,GAAG,OAA2B;AACxDb,EAAAA,IAAI,EAAEQ;AADkD,CAA3B,CAAjC;;AAIA,MAAMM,sBAAsB,GAAG,OAA2B;AACtDd,EAAAA,IAAI,EAAES;AADgD,CAA3B,CAA/B;;AAIA,MAAMM,sBAAsB,GAAIT,KAAD,KAAwC;AACnEN,EAAAA,IAAI,EAAEU,2BAD6D;AAEnEN,EAAAA,OAAO,EAAEE;AAF0D,CAAxC,CAA/B;;AAIA,SACIZ,mBADJ,EAEIC,6BAFJ,EAGIC,2BAHJ,EAIIC,2BAJJ,EAKIC,eALJ,EAMIO,sBANJ,EAOIJ,wBAPJ,EAQIC,sBARJ,EASIK,mBATJ,EAUIC,6BAVJ,EAWIE,2BAXJ,EAYID,2BAZJ,EAaIE,eAbJ,EAcIE,wBAdJ,EAeIE,sBAfJ,EAgBID,sBAhBJ","sourcesContent":["import { RestService } from \"../../../services/rest-service\";\r\nimport {UserInfo} from \"../types\";\r\n\r\n\r\nconst GET_USER_INFO_BY_ID = 'GET_USER_INFO_BY_ID';\r\nconst GET_USER_INFO_BY_ID_REQUESTED = 'GET_USER_INFO_BY_ID_REQUESTED';\r\nconst GET_USER_INFO_BY_ID_SUCCESS = 'GET_USER_INFO_BY_ID_SUCCESS';\r\nconst GET_USER_INFO_BY_ID_FAILURE = 'GET_USER_INFO_BY_ID_FAILURE';\r\n\r\n\r\nexport interface GetUserInfoByIdAction{\r\n    type: typeof GET_USER_INFO_BY_ID;\r\n    service: RestService;\r\n}\r\n\r\ninterface GetUserInfoByIdRequestedAction {\r\n    type: typeof GET_USER_INFO_BY_ID_REQUESTED;\r\n}\r\n\r\ninterface GetUserInfoByIdSuccessAction {\r\n    type: typeof GET_USER_INFO_BY_ID_SUCCESS;\r\n    payload: any;\r\n}\r\n\r\ninterface GetUserInfoByIdFailureAction {\r\n    type: typeof GET_USER_INFO_BY_ID_FAILURE;\r\n    payload: string;\r\n}\r\nexport type ProfileActionTypes =\r\n    | GetUserInfoByIdRequestedAction\r\n    | GetUserInfoByIdSuccessAction\r\n    | GetUserInfoByIdFailureAction\r\n    | PutUserInfoByIdRequestedAction\r\n    | PutUserInfoByIdSuccessAction\r\n    | PutUserInfoByIdFailureAction;\r\n\r\n\r\nconst  getUserInfoById = (service: RestService) => (): GetUserInfoByIdAction => ({\r\n    type: GET_USER_INFO_BY_ID,\r\n    service\r\n});\r\n\r\nconst getUserInfoByIdRequested = (): ProfileActionTypes => ({\r\n    type: GET_USER_INFO_BY_ID_REQUESTED\r\n});\r\n\r\nconst getUserInfoByIdSuccess = (data: any): ProfileActionTypes => ({\r\n    type: GET_USER_INFO_BY_ID_SUCCESS,\r\n    payload: data\r\n});\r\n\r\nconst getUserInfoByIdFailure = (error: string): ProfileActionTypes => ({\r\n    type: GET_USER_INFO_BY_ID_FAILURE,\r\n    payload: error\r\n})\r\n\r\nconst PUT_USER_INFO_BY_ID = 'PUT_USER_INFO_BY_ID';\r\nconst PUT_USER_INFO_BY_ID_REQUESTED = 'PUT_USER_INFO_BY_ID_REQUESTED';\r\nconst PUT_USER_INFO_BY_ID_SUCCESS = 'PUT_USER_INFO_BY_ID_SUCCESS';\r\nconst PUT_USER_INFO_BY_ID_FAILURE = 'PUT_USER_INFO_BY_ID_FAILURE';\r\n\r\nexport interface PutUserInfoByIdAction{\r\n    type: typeof PUT_USER_INFO_BY_ID;\r\n    service: RestService;\r\n    payload: UserInfo;\r\n}\r\n\r\ninterface PutUserInfoByIdRequestedAction {\r\n    type: typeof PUT_USER_INFO_BY_ID_REQUESTED;\r\n}\r\n\r\ninterface PutUserInfoByIdSuccessAction {\r\n    type: typeof PUT_USER_INFO_BY_ID_SUCCESS;\r\n}\r\n\r\ninterface PutUserInfoByIdFailureAction {\r\n    type: typeof PUT_USER_INFO_BY_ID_FAILURE;\r\n    payload: string;\r\n}\r\n\r\nconst  putUserInfoById = (service: RestService) => (userInfo: UserInfo): PutUserInfoByIdAction => ({\r\n    type: PUT_USER_INFO_BY_ID,\r\n    service,\r\n    payload: userInfo\r\n});\r\n\r\nconst putUserInfoByIdRequested = (): ProfileActionTypes => ({\r\n    type: PUT_USER_INFO_BY_ID_REQUESTED\r\n});\r\n\r\nconst putUserInfoByIdSuccess = (): ProfileActionTypes => ({\r\n    type: PUT_USER_INFO_BY_ID_SUCCESS,\r\n});\r\n\r\nconst putUserInfoByIdFailure = (error: string): ProfileActionTypes => ({\r\n    type: PUT_USER_INFO_BY_ID_FAILURE,\r\n    payload: error\r\n})\r\nexport {\r\n    GET_USER_INFO_BY_ID,\r\n    GET_USER_INFO_BY_ID_REQUESTED,\r\n    GET_USER_INFO_BY_ID_SUCCESS,\r\n    GET_USER_INFO_BY_ID_FAILURE,\r\n    getUserInfoById,\r\n    getUserInfoByIdFailure,\r\n    getUserInfoByIdRequested,\r\n    getUserInfoByIdSuccess,\r\n    PUT_USER_INFO_BY_ID,\r\n    PUT_USER_INFO_BY_ID_REQUESTED,\r\n    PUT_USER_INFO_BY_ID_FAILURE,\r\n    PUT_USER_INFO_BY_ID_SUCCESS,\r\n    putUserInfoById,\r\n    putUserInfoByIdRequested,\r\n    putUserInfoByIdFailure,\r\n    putUserInfoByIdSuccess\r\n};\r\n"]},"metadata":{},"sourceType":"module"}