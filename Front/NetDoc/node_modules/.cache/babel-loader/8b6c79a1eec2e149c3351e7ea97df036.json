{"ast":null,"code":"const GET_USER_INFO_BY_ID = 'GET_USER_INFO_BY_ID';\nconst GET_USER_INFO_BY_ID_REQUESTED = 'GET_USER_INFO_BY_ID_REQUESTED';\nconst GET_USER_INFO_BY_ID_SUCCESS = 'GET_USER_INFO_BY_ID_SUCCESS';\nconst GET_USER_INFO_BY_ID_FAILURE = 'GET_USER_INFO_BY_ID_FAILURE';\n\nconst getUserInfoById = service => () => ({\n  type: GET_USER_INFO_BY_ID,\n  service\n});\n\nconst getUserInfoByIdRequested = () => ({\n  type: GET_USER_INFO_BY_ID_REQUESTED\n});\n\nconst getUserInfoByIdSuccess = data => ({\n  type: GET_USER_INFO_BY_ID_SUCCESS,\n  payload: data\n});\n\nconst getUserInfoByIdFailure = error => ({\n  type: GET_USER_INFO_BY_ID_FAILURE,\n  payload: error\n});\n\nexport { GET_USER_INFO_BY_ID, GET_USER_INFO_BY_ID_REQUESTED, GET_USER_INFO_BY_ID_SUCCESS, GET_USER_INFO_BY_ID_FAILURE, getUserInfoById, getUserInfoByIdFailure, getUserInfoByIdRequested, getUserInfoByIdSuccess };","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/header/actions/header-actions.ts"],"names":["GET_USER_INFO_BY_ID","GET_USER_INFO_BY_ID_REQUESTED","GET_USER_INFO_BY_ID_SUCCESS","GET_USER_INFO_BY_ID_FAILURE","getUserInfoById","service","type","getUserInfoByIdRequested","getUserInfoByIdSuccess","data","payload","getUserInfoByIdFailure","error"],"mappings":"AAGA,MAAMA,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,6BAA6B,GAAG,+BAAtC;AACA,MAAMC,2BAA2B,GAAG,6BAApC;AACA,MAAMC,2BAA2B,GAAG,6BAApC;;AA0BA,MAAOC,eAAe,GAAIC,OAAD,IAA0B,OAA8B;AAC7EC,EAAAA,IAAI,EAAEN,mBADuE;AAE7EK,EAAAA;AAF6E,CAA9B,CAAnD;;AAKA,MAAME,wBAAwB,GAAG,OAA2B;AACxDD,EAAAA,IAAI,EAAEL;AADkD,CAA3B,CAAjC;;AAIA,MAAMO,sBAAsB,GAAIC,IAAD,KAAoC;AAC/DH,EAAAA,IAAI,EAAEJ,2BADyD;AAE/DQ,EAAAA,OAAO,EAAED;AAFsD,CAApC,CAA/B;;AAKA,MAAME,sBAAsB,GAAIC,KAAD,KAAwC;AACnEN,EAAAA,IAAI,EAAEH,2BAD6D;AAEnEO,EAAAA,OAAO,EAAEE;AAF0D,CAAxC,CAA/B;;AAKA,SACIZ,mBADJ,EAEIC,6BAFJ,EAGIC,2BAHJ,EAIIC,2BAJJ,EAKIC,eALJ,EAMIO,sBANJ,EAOIJ,wBAPJ,EAQIC,sBARJ","sourcesContent":["import { RestService } from \"../../../services/rest-service\";\r\n\r\n\r\nconst GET_USER_INFO_BY_ID = 'GET_USER_INFO_BY_ID';\r\nconst GET_USER_INFO_BY_ID_REQUESTED = 'GET_USER_INFO_BY_ID_REQUESTED';\r\nconst GET_USER_INFO_BY_ID_SUCCESS = 'GET_USER_INFO_BY_ID_SUCCESS';\r\nconst GET_USER_INFO_BY_ID_FAILURE = 'GET_USER_INFO_BY_ID_FAILURE';\r\n\r\nexport interface GetUserInfoByIdAction{\r\n    type: typeof GET_USER_INFO_BY_ID;\r\n    service: RestService;\r\n}\r\n\r\ninterface GetUserInfoByIdRequestedAction {\r\n    type: typeof GET_USER_INFO_BY_ID_REQUESTED;\r\n}\r\n\r\ninterface GetUserInfoByIdSuccessAction {\r\n    type: typeof GET_USER_INFO_BY_ID_SUCCESS;\r\n    payload: any;\r\n}\r\n\r\ninterface GetUserInfoByIdFailureAction {\r\n    type: typeof GET_USER_INFO_BY_ID_FAILURE;\r\n    payload: string;\r\n}\r\nexport type ProfileActionTypes =\r\n    | GetUserInfoByIdRequestedAction\r\n    | GetUserInfoByIdSuccessAction\r\n    | GetUserInfoByIdFailureAction;\r\n\r\n\r\nconst  getUserInfoById = (service: RestService) => (): GetUserInfoByIdAction => ({\r\n    type: GET_USER_INFO_BY_ID,\r\n    service\r\n});\r\n\r\nconst getUserInfoByIdRequested = (): ProfileActionTypes => ({\r\n    type: GET_USER_INFO_BY_ID_REQUESTED\r\n});\r\n\r\nconst getUserInfoByIdSuccess = (data: any): ProfileActionTypes => ({\r\n    type: GET_USER_INFO_BY_ID_SUCCESS,\r\n    payload: data\r\n});\r\n\r\nconst getUserInfoByIdFailure = (error: string): ProfileActionTypes => ({\r\n    type: GET_USER_INFO_BY_ID_FAILURE,\r\n    payload: error\r\n})\r\n\r\nexport {\r\n    GET_USER_INFO_BY_ID,\r\n    GET_USER_INFO_BY_ID_REQUESTED,\r\n    GET_USER_INFO_BY_ID_SUCCESS,\r\n    GET_USER_INFO_BY_ID_FAILURE,\r\n    getUserInfoById,\r\n    getUserInfoByIdFailure,\r\n    getUserInfoByIdRequested,\r\n    getUserInfoByIdSuccess\r\n};\r\n"]},"metadata":{},"sourceType":"module"}