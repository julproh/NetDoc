{"ast":null,"code":"import { Storage } from '../components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { showModal, hideModal, getInfo } from '../actions/storage-actions';\nimport withRestService from '../../../hocs/with-rest-service';\n\nconst mapStateToProps = state => {\n  return {\n    infos: state.storageReducer.infos,\n    modalIsVisible: state.storageReducer.modalIsVisible,\n    infoLoading: state.storageReducer.infoLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch, _ref) => {\n  let {\n    restService\n  } = _ref;\n  return bindActionCreators({\n    showModal,\n    hideModal,\n    getInfo: getInfo(restService)\n  }, dispatch);\n};\n\nexport default compose(withRestService(), connect(mapStateToProps, mapDispatchToProps))(Storage);","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/storage/container/storage-container.ts"],"names":["Storage","connect","bindActionCreators","compose","showModal","hideModal","getInfo","withRestService","mapStateToProps","state","infos","storageReducer","modalIsVisible","infoLoading","mapDispatchToProps","dispatch","restService"],"mappings":"AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,OAA/B,QAA8C,4BAA9C;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAGA,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AAEpC,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,cAAN,CAAqBD,KADzB;AAEHE,IAAAA,cAAc,EAAEH,KAAK,CAACE,cAAN,CAAqBC,cAFlC;AAGHC,IAAAA,WAAW,EAAEJ,KAAK,CAACE,cAAN,CAAqBE;AAH/B,GAAP;AAKH,CAPD;;AASA,MAAMC,kBAAkB,GAAG,CACvBC,QADuB;AAAA,MAEvB;AAAEC,IAAAA;AAAF,GAFuB;AAAA,SAIvBd,kBAAkB,CACd;AACIE,IAAAA,SADJ;AAEIC,IAAAA,SAFJ;AAGIC,IAAAA,OAAO,EAAEA,OAAO,CAACU,WAAD;AAHpB,GADc,EAMdD,QANc,CAJK;AAAA,CAA3B;;AAaA,eAAeZ,OAAO,CAClBI,eAAe,EADG,EAElBN,OAAO,CAACO,eAAD,EAAkBM,kBAAlB,CAFW,CAAP,CAGbd,OAHa,CAAf","sourcesContent":["import { Storage } from '../components'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, compose, Dispatch } from 'redux';\r\nimport { showModal, hideModal, getInfo } from '../actions/storage-actions';\r\nimport withRestService from '../../../hocs/with-rest-service';\r\n\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\r\n    return { \r\n        infos: state.storageReducer.infos,\r\n        modalIsVisible: state.storageReducer.modalIsVisible,\r\n        infoLoading: state.storageReducer.infoLoading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: Dispatch,\r\n    { restService }: any\r\n) =>\r\n    bindActionCreators(\r\n        {\r\n            showModal,\r\n            hideModal,\r\n            getInfo: getInfo(restService)\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport default compose(\r\n    withRestService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Storage);"]},"metadata":{},"sourceType":"module"}