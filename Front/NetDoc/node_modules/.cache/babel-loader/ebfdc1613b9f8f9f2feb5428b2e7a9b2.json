{"ast":null,"code":"import { put, takeEvery, call } from \"redux-saga/effects\";\nimport { getUserInfoByIdRequested, getUserInfoByIdSuccess, getUserInfoByIdFailure, GET_USER_INFO_BY_ID, putUserInfoByIdRequested, putUserInfoByIdSuccess, putUserInfoByIdFailure, PUT_USER_INFO_BY_ID } from '../actions/profile-actions';\n\nfunction* fetchGetInfoAsync(action) {\n  console.log('fetchGetInfoAsync');\n  const {\n    service\n  } = action;\n\n  try {\n    yield put(putUserInfoByIdRequested());\n    const response = yield call(() => service.putUserInfoById());\n    console.log(response);\n    yield put(putUserInfoByIdSuccess(response));\n  } catch ({\n    error\n  }) {\n    yield put(putUserInfoByIdFailure(error));\n  }\n}\n\nfunction* fetchPutInfoAsync(action) {\n  console.log('fetchPuyInfoAsync');\n  const {\n    service\n  } = action;\n\n  try {\n    yield put(getUserInfoByIdRequested());\n    const response = yield call(() => service.getUserInfoById());\n    console.log(response);\n    yield put(getUserInfoByIdSuccess(response));\n  } catch ({\n    error\n  }) {\n    yield put(getUserInfoByIdFailure(error));\n  }\n}\n\nexport function* profileWatcher() {\n  console.log('profileWatcher');\n  yield takeEvery(GET_USER_INFO_BY_ID, fetchGetInfoAsync);\n  yield takeEvery(PUT_USER_INFO_BY_ID, fetchPutInfoAsync);\n}","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/profile/sagas/profile-saga.ts"],"names":["put","takeEvery","call","getUserInfoByIdRequested","getUserInfoByIdSuccess","getUserInfoByIdFailure","GET_USER_INFO_BY_ID","putUserInfoByIdRequested","putUserInfoByIdSuccess","putUserInfoByIdFailure","PUT_USER_INFO_BY_ID","fetchGetInfoAsync","action","console","log","service","response","putUserInfoById","error","fetchPutInfoAsync","getUserInfoById","profileWatcher"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,SAAb,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SACIC,wBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,EAIIC,mBAJJ,EAOIC,wBAPJ,EAQIC,sBARJ,EASIC,sBATJ,EAUIC,mBAVJ,QAWO,4BAXP;;AAiBA,UAAUC,iBAAV,CAA4BC,MAA5B,EAA2D;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,MAApB;;AACA,MAAI;AACA,UAAMZ,GAAG,CAACO,wBAAwB,EAAzB,CAAT;AACA,UAAMS,QAA2B,GAAG,MAAMd,IAAI,CAAC,MAC3Ca,OAAO,CAACE,eAAR,EAD0C,CAA9C;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,UAAMhB,GAAG,CAACQ,sBAAsB,CAACQ,QAAD,CAAvB,CAAT;AACH,GAPD,CAOE,OAAO;AAAEE,IAAAA;AAAF,GAAP,EAAkB;AAChB,UAAMlB,GAAG,CAACS,sBAAsB,CAACS,KAAD,CAAvB,CAAT;AACH;AACJ;;AAED,UAAUC,iBAAV,CAA4BP,MAA5B,EAA2D;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,MAApB;;AACA,MAAI;AACA,UAAMZ,GAAG,CAACG,wBAAwB,EAAzB,CAAT;AACA,UAAMa,QAA2B,GAAG,MAAMd,IAAI,CAAC,MAC3Ca,OAAO,CAACK,eAAR,EAD0C,CAA9C;AAGAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,UAAMhB,GAAG,CAACI,sBAAsB,CAACY,QAAD,CAAvB,CAAT;AACH,GAPD,CAOE,OAAO;AAAEE,IAAAA;AAAF,GAAP,EAAkB;AAChB,UAAMlB,GAAG,CAACK,sBAAsB,CAACa,KAAD,CAAvB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUG,cAAV,GAA2B;AAC9BR,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAMb,SAAS,CAACK,mBAAD,EAAsBK,iBAAtB,CAAf;AACA,QAAMV,SAAS,CAACS,mBAAD,EAAsBS,iBAAtB,CAAf;AACH","sourcesContent":["import {put, takeEvery, call} from \"redux-saga/effects\"\r\nimport {\r\n    getUserInfoByIdRequested,\r\n    getUserInfoByIdSuccess,\r\n    getUserInfoByIdFailure,\r\n    GET_USER_INFO_BY_ID,\r\n    GetUserInfoByIdAction,\r\n    PutUserInfoByIdAction,\r\n    putUserInfoByIdRequested,\r\n    putUserInfoByIdSuccess,\r\n    putUserInfoByIdFailure,\r\n    PUT_USER_INFO_BY_ID\r\n} from '../actions/profile-actions';\r\n\r\nexport interface ResponseGenerator{\r\n    [propName: string]: any;\r\n}\r\n\r\nfunction* fetchGetInfoAsync(action: GetUserInfoByIdAction) {\r\n    console.log('fetchGetInfoAsync');\r\n    const { service } = action;\r\n    try {\r\n        yield put(putUserInfoByIdRequested());\r\n        const response: ResponseGenerator = yield call(() =>\r\n            service.putUserInfoById()\r\n        );\r\n        console.log(response);\r\n        yield put(putUserInfoByIdSuccess(response));\r\n    } catch ({ error }) {\r\n        yield put(putUserInfoByIdFailure(error as string));\r\n    }\r\n}\r\n\r\nfunction* fetchPutInfoAsync(action: PutUserInfoByIdAction) {\r\n    console.log('fetchPuyInfoAsync');\r\n    const { service } = action;\r\n    try {\r\n        yield put(getUserInfoByIdRequested());\r\n        const response: ResponseGenerator = yield call(() =>\r\n            service.getUserInfoById()\r\n        );\r\n        console.log(response);\r\n        yield put(getUserInfoByIdSuccess(response));\r\n    } catch ({ error }) {\r\n        yield put(getUserInfoByIdFailure(error as string));\r\n    }\r\n}\r\n\r\nexport function* profileWatcher() {\r\n    console.log('profileWatcher');\r\n    yield takeEvery(GET_USER_INFO_BY_ID, fetchGetInfoAsync);\r\n    yield takeEvery(PUT_USER_INFO_BY_ID, fetchPutInfoAsync)\r\n}"]},"metadata":{},"sourceType":"module"}