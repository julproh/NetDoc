{"ast":null,"code":"import { PUT_USER_INFO_BY_ID, putUserInfoByIdFailure, putUserInfoByIdRequested, putUserInfoByIdSuccess } from \"../actions/profile-actions\";\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nfunction* fetchPutInfoAsync(action) {\n  console.log('fetchGetInfoAsync');\n  const {\n    service\n  } = action;\n\n  try {\n    yield put(putUserInfoByIdRequested());\n    const response = yield call(() => service.putUserInfoById());\n    console.log(response);\n    yield put(putUserInfoByIdSuccess());\n  } catch ({\n    error\n  }) {\n    yield put(putUserInfoByIdFailure(error));\n  }\n}\n\nexport function* saveUserInfoWatcher() {\n  console.log('saveUserInfoWatcher');\n  yield takeEvery(PUT_USER_INFO_BY_ID, fetchPutInfoAsync);\n}","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/profile/sagas/save-user-info-saga.ts"],"names":["PUT_USER_INFO_BY_ID","putUserInfoByIdFailure","putUserInfoByIdRequested","putUserInfoByIdSuccess","call","put","takeEvery","fetchPutInfoAsync","action","console","log","service","response","putUserInfoById","error","saveUserInfoWatcher"],"mappings":"AAAA,SACIA,mBADJ,EAGIC,sBAHJ,EAIIC,wBAJJ,EAKIC,sBALJ,QAMO,4BANP;AAOA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,SAAnB,QAAmC,oBAAnC;;AAGA,UAAUC,iBAAV,CAA4BC,MAA5B,EAA2D;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,MAApB;;AACA,MAAI;AACA,UAAMH,GAAG,CAACH,wBAAwB,EAAzB,CAAT;AACA,UAAMU,QAA2B,GAAG,MAAMR,IAAI,CAAC,MAC3CO,OAAO,CAACE,eAAR,EAD0C,CAA9C;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,UAAMP,GAAG,CAACF,sBAAsB,EAAvB,CAAT;AACH,GAPD,CAOE,OAAO;AAAEW,IAAAA;AAAF,GAAP,EAAkB;AAChB,UAAMT,GAAG,CAACJ,sBAAsB,CAACa,KAAD,CAAvB,CAAT;AACH;AACJ;;AAGD,OAAO,UAAUC,mBAAV,GAAgC;AACnCN,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,QAAMJ,SAAS,CAACN,mBAAD,EAAsBO,iBAAtB,CAAf;AACH","sourcesContent":["import {\r\n    PUT_USER_INFO_BY_ID,\r\n    PutUserInfoByIdAction,\r\n    putUserInfoByIdFailure,\r\n    putUserInfoByIdRequested,\r\n    putUserInfoByIdSuccess\r\n} from \"../actions/profile-actions\";\r\nimport {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport {ResponseGenerator} from \"./get-user-info-saga\";\r\n\r\nfunction* fetchPutInfoAsync(action: PutUserInfoByIdAction) {\r\n    console.log('fetchGetInfoAsync');\r\n    const { service } = action;\r\n    try {\r\n        yield put(putUserInfoByIdRequested());\r\n        const response: ResponseGenerator = yield call(() =>\r\n            service.putUserInfoById()\r\n        );\r\n        console.log(response);\r\n        yield put(putUserInfoByIdSuccess());\r\n    } catch ({ error }) {\r\n        yield put(putUserInfoByIdFailure(error as string));\r\n    }\r\n}\r\n\r\n\r\nexport function* saveUserInfoWatcher() {\r\n    console.log('saveUserInfoWatcher');\r\n    yield takeEvery(PUT_USER_INFO_BY_ID, fetchPutInfoAsync)\r\n}"]},"metadata":{},"sourceType":"module"}