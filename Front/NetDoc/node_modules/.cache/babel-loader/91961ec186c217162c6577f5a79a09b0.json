{"ast":null,"code":"import { GET_USER_INFO_BY_ID_FAILURE, GET_USER_INFO_BY_ID_REQUESTED, GET_USER_INFO_BY_ID_SUCCESS } from '../actions/profile-actions';\nconst initialState = {\n  infos: {\n    name: \"User\",\n    surname: \"User Surname\",\n    number: \"888888888\",\n    password: \"Password\",\n    id: \"1\"\n  },\n  error: \"\",\n  infoLoading: false\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_USER_INFO_BY_ID_REQUESTED:\n      {\n        return { ...state,\n          infoLoading: true\n        };\n      }\n\n    case GET_USER_INFO_BY_ID_SUCCESS:\n      {\n        return { ...state,\n          infos: action.payload,\n          infoLoading: false\n        };\n      }\n\n    case GET_USER_INFO_BY_ID_FAILURE:\n      {\n        return { ...state,\n          error: action.payload,\n          infoLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/profile/reducer/profile-reducer.ts"],"names":["GET_USER_INFO_BY_ID_FAILURE","GET_USER_INFO_BY_ID_REQUESTED","GET_USER_INFO_BY_ID_SUCCESS","initialState","infos","name","surname","number","password","id","error","infoLoading","profileReducer","state","action","type","payload"],"mappings":"AAAA,SAEIA,2BAFJ,EAGIC,6BAHJ,EAIIC,2BAJJ,QAOO,4BAPP;AAeA,MAAMC,YAA0B,GAAG;AAC/BC,EAAAA,KAAK,EAAE;AAACC,IAAAA,IAAI,EAAE,MAAP;AACCC,IAAAA,OAAO,EAAE,cADV;AAECC,IAAAA,MAAM,EAAE,WAFT;AAGCC,IAAAA,QAAQ,EAAE,UAHX;AAICC,IAAAA,EAAE,EAAE;AAJL,GADwB;AAM/BC,EAAAA,KAAK,EAAE,EANwB;AAO/BC,EAAAA,WAAW,EAAE;AAPkB,CAAnC;;AAUA,MAAMC,cAAc,GAAG,YAGlB;AAAA,MAFHC,KAEG,uEAFKV,YAEL;AAAA,MADHW,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,6BAAL;AAAoC;AAChC,eAAO,EACH,GAAGY,KADA;AAEHF,UAAAA,WAAW,EAAE;AAFV,SAAP;AAIH;;AACD,SAAKT,2BAAL;AAAkC;AAChC,eAAO,EACH,GAAGW,KADA;AAEHT,UAAAA,KAAK,EAAEU,MAAM,CAACE,OAFX;AAGHL,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKD;;AACD,SAAKX,2BAAL;AAAkC;AAChC,eAAO,EACH,GAAGa,KADA;AAEHH,UAAAA,KAAK,EAAEI,MAAM,CAACE,OAFX;AAGHL,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKD;;AACD;AACI,aAAOE,KAAP;AAtBR;AAwBD,CA5BD;;AA8BA,eAAeD,cAAf","sourcesContent":["import {\r\n\r\n    GET_USER_INFO_BY_ID_FAILURE,\r\n    GET_USER_INFO_BY_ID_REQUESTED,\r\n    GET_USER_INFO_BY_ID_SUCCESS,\r\n    getUserInfoById,\r\n    ProfileActionTypes\r\n} from '../actions/profile-actions';\r\n\r\nexport interface ProfileState {\r\n    infoLoading: boolean;\r\n    infos: any;\r\n    error: string;\r\n}\r\n\r\nconst initialState: ProfileState = {\r\n    infos: {name: \"User\",\r\n            surname: \"User Surname\",\r\n            number: \"888888888\",\r\n            password: \"Password\",\r\n            id: \"1\"},\r\n    error: \"\",\r\n    infoLoading: false\r\n};\r\n\r\nconst profileReducer = (\r\n  state = initialState,\r\n  action: ProfileActionTypes\r\n) => {\r\n  switch (action.type) {\r\n      case GET_USER_INFO_BY_ID_REQUESTED: {\r\n          return {\r\n              ...state,\r\n              infoLoading: true\r\n          };\r\n      }\r\n      case GET_USER_INFO_BY_ID_SUCCESS: {\r\n        return {\r\n            ...state,\r\n            infos: action.payload,\r\n            infoLoading: false\r\n          };\r\n      }\r\n      case GET_USER_INFO_BY_ID_FAILURE: {\r\n        return {\r\n            ...state,\r\n            error: action.payload,\r\n            infoLoading: false\r\n          };\r\n      }\r\n      default:\r\n          return state;\r\n    }\r\n};\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}