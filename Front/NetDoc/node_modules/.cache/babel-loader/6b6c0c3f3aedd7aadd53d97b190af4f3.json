{"ast":null,"code":"import Profile from \"../components\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { getUserInfoById } from '../actions/profile-actions';\nimport withRestService from '../../../hocs/with-rest-service';\n\nconst mapStateToProps = state => {\n  return {\n    infos: state.storageReducer.infos,\n    infoLoading: state.storageReducer.infoLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch, _ref) => {\n  let {\n    restService\n  } = _ref;\n  return bindActionCreators({\n    getUserInfoById: getUserInfoById(restService)\n  }, dispatch);\n};\n\nexport default compose(withRestService(), connect(mapStateToProps, mapDispatchToProps))(Profile);","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/profile/container/profile-container.ts"],"names":["Profile","connect","bindActionCreators","compose","getUserInfoById","withRestService","mapStateToProps","state","infos","storageReducer","infoLoading","mapDispatchToProps","dispatch","restService"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAAsD,OAAtD;AACA,SAAUC,eAAV,QAAiC,4BAAjC;AACA,OAAOC,eAAP,MAA4B,iCAA5B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AAEpC,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,cAAN,CAAqBD,KADzB;AAEHE,IAAAA,WAAW,EAAEH,KAAK,CAACE,cAAN,CAAqBC;AAF/B,GAAP;AAIH,CAND;;AAQA,MAAMC,kBAAkB,GAAG,CACvBC,QADuB;AAAA,MAEvB;AAACC,IAAAA;AAAD,GAFuB;AAAA,SAIvBX,kBAAkB,CACd;AACIE,IAAAA,eAAe,EAAEA,eAAe,CAACS,WAAD;AADpC,GADc,EAIdD,QAJc,CAJK;AAAA,CAA3B;;AAWA,eAAeT,OAAO,CAClBE,eAAe,EADG,EAElBJ,OAAO,CAACK,eAAD,EAAkBK,kBAAlB,CAFW,CAAP,CAGbX,OAHa,CAAf","sourcesContent":["import Profile from \"../components\"\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, compose, Dispatch } from 'redux';\r\nimport {  getUserInfoById } from '../actions/profile-actions';\r\nimport withRestService from '../../../hocs/with-rest-service';\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\r\n    return {\r\n        infos: state.storageReducer.infos,\r\n        infoLoading: state.storageReducer.infoLoading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: Dispatch,\r\n    {restService}: any\r\n) =>\r\n    bindActionCreators(\r\n        {\r\n            getUserInfoById: getUserInfoById(restService)\r\n        },\r\n        dispatch\r\n    );\r\n\r\nexport default compose(\r\n    withRestService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Profile);"]},"metadata":{},"sourceType":"module"}