{"ast":null,"code":"import { SHOW_MODAL, HIDE_MODAL, GET_INFO_SUCCESS, GET_INFO_FAILURE, GET_INFO_REQUESTED } from '../actions/storage-actions';\nconst initialState = {\n  error: \"\",\n  modalIsVisible: false,\n  infos: [],\n  infoLoading: false\n};\n\nconst storageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_MODAL:\n      return { ...state,\n        modalIsVisible: true\n      };\n\n    case HIDE_MODAL:\n      {\n        return { ...state,\n          modalIsVisible: false\n        };\n      }\n\n    case GET_INFO_SUCCESS:\n      {\n        return { ...state,\n          infos: action.payload,\n          infoLoading: false\n        };\n      }\n\n    case GET_INFO_REQUESTED:\n      {\n        return { ...state,\n          infoLoading: true\n        };\n      }\n\n    case GET_INFO_FAILURE:\n      {\n        return { ...state,\n          error: action.payload,\n          infoLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default storageReducer;","map":{"version":3,"sources":["D:/Документы/5_sem/NCplanner/Front/NetDoc/src/modules/storage/reducers/storage-reducer.ts"],"names":["SHOW_MODAL","HIDE_MODAL","GET_INFO_SUCCESS","GET_INFO_FAILURE","GET_INFO_REQUESTED","initialState","error","modalIsVisible","infos","infoLoading","storageReducer","state","action","type","payload"],"mappings":"AAAA,SACIA,UADJ,EAEIC,UAFJ,EAGIC,gBAHJ,EAIIC,gBAJJ,EAKIC,kBALJ,QAOO,4BAPP;AAgBA,MAAMC,YAA0B,GAAG;AAC/BC,EAAAA,KAAK,EAAE,EADwB;AAE/BC,EAAAA,cAAc,EAAE,KAFe;AAG/BC,EAAAA,KAAK,EAAE,EAHwB;AAI/BC,EAAAA,WAAW,EAAE;AAJkB,CAAnC;;AAOA,MAAMC,cAAc,GAAG,YAGlB;AAAA,MAFHC,KAEG,uEAFKN,YAEL;AAAA,MADHO,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,UAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,cAAc,EAAE;AAFb,OAAP;;AAIJ,SAAKN,UAAL;AAAiB;AACb,eAAO,EACH,GAAGU,KADA;AAEHJ,UAAAA,cAAc,EAAE;AAFb,SAAP;AAIH;;AACD,SAAKL,gBAAL;AAAuB;AACrB,eAAO,EACH,GAAGS,KADA;AAEHH,UAAAA,KAAK,EAAEI,MAAM,CAACE,OAFX;AAGHL,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKD;;AACD,SAAKL,kBAAL;AAAyB;AACvB,eAAO,EACH,GAAGO,KADA;AAEHF,UAAAA,WAAW,EAAE;AAFV,SAAP;AAID;;AACD,SAAKN,gBAAL;AAAuB;AACrB,eAAO,EACH,GAAGQ,KADA;AAEHL,UAAAA,KAAK,EAAEM,MAAM,CAACE,OAFX;AAGHL,UAAAA,WAAW,EAAE;AAHV,SAAP;AAKD;;AACD;AACI,aAAOE,KAAP;AAjCR;AAmCD,CAvCD;;AAyCA,eAAeD,cAAf","sourcesContent":["import {\r\n    SHOW_MODAL,\r\n    HIDE_MODAL,\r\n    GET_INFO_SUCCESS,\r\n    GET_INFO_FAILURE,\r\n    GET_INFO_REQUESTED,\r\n    StorageActionTypes\r\n} from '../actions/storage-actions';\r\n\r\nexport interface StorageState {\r\n    modalIsVisible: boolean;\r\n    infoLoading: boolean;\r\n    infos: any;\r\n    error: string;\r\n}\r\n\r\nconst initialState: StorageState = {\r\n    error: \"\",\r\n    modalIsVisible: false,\r\n    infos: [],\r\n    infoLoading: false\r\n};\r\n\r\nconst storageReducer = (\r\n  state = initialState,\r\n  action: StorageActionTypes\r\n) => {\r\n  switch (action.type) {\r\n      case SHOW_MODAL:\r\n          return {\r\n              ...state,\r\n              modalIsVisible: true\r\n          };\r\n      case HIDE_MODAL: {\r\n          return {\r\n              ...state,\r\n              modalIsVisible: false\r\n          };\r\n      }\r\n      case GET_INFO_SUCCESS: {\r\n        return {\r\n            ...state,\r\n            infos: action.payload,\r\n            infoLoading: false\r\n          };\r\n      }\r\n      case GET_INFO_REQUESTED: {\r\n        return {\r\n            ...state,\r\n            infoLoading: true\r\n          };\r\n      }\r\n      case GET_INFO_FAILURE: {\r\n        return {\r\n            ...state,\r\n            error: action.payload,\r\n            infoLoading: false\r\n          };\r\n      }\r\n      default:\r\n          return state;\r\n    }\r\n};\r\n\r\nexport default storageReducer;"]},"metadata":{},"sourceType":"module"}